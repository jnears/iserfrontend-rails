$gutter: 3
$max_columns: 6
$column_widths: 100

@for $i from 2 through $max_columns
  $column_widths: append($column_widths, ((100 - ($gutter * ($i))) / $i), comma)

@mixin row
  // margin-top: #{$gutter}#{'%'}
  @include rem-fallback(margin-bottom, 1.5)
  margin-left: #{$gutter * -1}#{'%'}
  *zoom: 1
  position: relative
  &:first-of-type
    margin-top: 0px
  &:before,
  &:after
    display: table
    content: ""
    line-height: 0
  &:after
    clear: both

@mixin column-width($number_of_columns, $gutters)
  width: #{(nth($column_widths, $number_of_columns) * $gutters) + ($gutter * ($gutters - 1))#{'%'}}

@mixin large-desktop-width($number_of_columns)

@mixin desktop-width($number_of_columns)
  @if $number_of_columns == 6
    width: #{(nth($column_widths, 3))}#{'%'}
    &:nth-child(3n+1)
      clear: left
    &:nth-child(n+4)
      // margin-top: #{$gutter}#{'%'}
      @include rem-fallback(margin-top, 1.5)

@mixin tablet-width($number_of_columns)
  @if $number_of_columns == 3
    width: auto
    float: none
    &:nth-child(n)
      // margin-top: #{$gutter}#{'%'}
      @include rem-fallback(margin-top, 1.5)
  @if $number_of_columns == 4 or $number_of_columns == 5
    width: #{(nth($column_widths, 2))}#{'%'}
    &:nth-child(2n+1)
      clear: left
    &:nth-child(n+3)
      // margin-top: #{$gutter}#{'%'}
      @include rem-fallback(margin-top, 1.5)
  @if $number_of_columns == 6
    width: #{(nth($column_widths, 2))}#{'%'}
    &:nth-child(n)
      clear: none
    &:nth-child(n+3)
      // margin-top: #{$gutter}#{'%'}
      @include rem-fallback(margin-top, 1.5)

[class*="span"]
  float: left
  min-height: 1px
  margin-left: #{$gutter}#{'%'}
  // outline: 1px solid $grey4
  & span:first-of-type
    margin-top: 0
  & span:last-of-type
    margin-bottom: 0

.container
  margin: #{$gutter}#{'%'} auto
  margin: 0 auto
  width: 90%
  position: relative
  // max-width: 100em
  @include respond-to(handheld)
    width: 92%

.pad
  padding: 1rem
  &>:first-child
    margin-top: 0rem
  &>:last-child
    margin-bottom: 0rem

.half
  float: left
  width: 48%
  &:nth-child(odd)
    clear: left
  &:nth-child(even)
    // margin-left: #{$gutter} * 2#{'%'}
    @include rem-fallback(margin-top, 1.5)
    @include respond-to(tablet)
      margin-left: 0
  &:nth-child(n+3)
    // margin-top: #{$gutter} * 2#{'%'}
    @include rem-fallback(margin-top, 1.5)
  @include respond-to(tablet)
    width: auto
    float: none
    &:nth-child(n+2)
      // margin-top: #{$gutter} * 2#{'%'}
      @include rem-fallback(margin-top, 1.5)

@for $i from 2 through $max_columns
  .colgroup-#{$i}
    @include row
    @include respond-to(handheld)
      margin-top: 0%
    @for $j from 1 through $i
      & > .span#{$j}
        @include column-width($i, $j)
        @include respond-to(large_desktop)
          @include large-desktop-width($i)
        @include respond-to(desktop)
          @include desktop-width($i)
        @include respond-to(tablet)
          @include tablet-width($i)
        @include respond-to(handheld)
          width: auto
          float: none
          &:nth-child(n)
            // margin-top: #{$gutter}#{'%'}
            @include rem-fallback(margin-top, 1.5)

